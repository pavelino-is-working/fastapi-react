{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sites\\\\test-tailwindcss\\\\my-project\\\\src\\\\context\\\\ContextWrapper.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useState } from \"react\";\nimport GlobalContext from \"./GlobalContext\";\nimport dayjs from \"dayjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction savedEventsReducer(state, _ref) {\n  let {\n    type,\n    payload\n  } = _ref;\n  switch (type) {\n    case 'push':\n      return [...state, payload];\n    case 'update':\n      return state.map(evt => evt.id === payload.id ? payload : evt);\n    case 'delete':\n      return state.filter(evt => evt.id !== payload.id);\n    default:\n      throw new Error();\n  }\n}\nfunction initEvents() {\n  const storageEvents = localStorage.getItem('savedEvents');\n  const parsedEvents = storageEvents ? JSON.parse(storageEvents) : [];\n  return parsedEvents;\n}\nexport default function ContextWrapper(props) {\n  _s();\n  const [monthIndex, setMonthIndex] = useState(dayjs().month());\n  const [showEventModal, setShowEventModal] = useState(false);\n  const [daySelected, setDaySelected] = useState(dayjs());\n  const [savedEvents, dispatchCalEvent] = useReducer(savedEventsReducer, [], initEvents);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      monthIndex,\n      setMonthIndex,\n      showEventModal,\n      setShowEventModal,\n      daySelected,\n      setDaySelected\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(ContextWrapper, \"WLrZN2vjXWgcY00oHK+JnTOa6AU=\");\n_c = ContextWrapper;\nvar _c;\n$RefreshReg$(_c, \"ContextWrapper\");","map":{"version":3,"names":["React","useReducer","useState","GlobalContext","dayjs","jsxDEV","_jsxDEV","savedEventsReducer","state","_ref","type","payload","map","evt","id","filter","Error","initEvents","storageEvents","localStorage","getItem","parsedEvents","JSON","parse","ContextWrapper","props","_s","monthIndex","setMonthIndex","month","showEventModal","setShowEventModal","daySelected","setDaySelected","savedEvents","dispatchCalEvent","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Sites/test-tailwindcss/my-project/src/context/ContextWrapper.js"],"sourcesContent":["import React, { useReducer, useState } from \"react\";\r\nimport GlobalContext from \"./GlobalContext\";\r\nimport dayjs from \"dayjs\";\r\n\r\nfunction savedEventsReducer(state, {type, payload}){\r\n    switch(type){\r\n        case 'push':\r\n            return[...state, payload];\r\n        case 'update':\r\n            return state.map(evt => evt.id === payload.id ? payload : evt)\r\n        case 'delete':\r\n            return state.filter(evt => evt.id !== payload.id)\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\r\n\r\nfunction initEvents(){\r\n    const storageEvents = localStorage.getItem('savedEvents')\r\n    const parsedEvents = storageEvents ? JSON.parse(storageEvents) : []\r\n        return parsedEvents;\r\n    \r\n}\r\nexport default function ContextWrapper(props){\r\n    const[monthIndex, setMonthIndex] = useState(dayjs().month())\r\n    const[showEventModal,setShowEventModal ] = useState(false)\r\n    const[daySelected, setDaySelected ] = useState(dayjs())\r\n    const [savedEvents, dispatchCalEvent] = useReducer(savedEventsReducer, [], initEvents)\r\n    return (\r\n        <GlobalContext.Provider value={{ \r\n            monthIndex, \r\n            setMonthIndex,\r\n            showEventModal,\r\n            setShowEventModal,\r\n            daySelected,\r\n            setDaySelected,\r\n            }}>\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,kBAAkBA,CAACC,KAAK,EAAAC,IAAA,EAAkB;EAAA,IAAhB;IAACC,IAAI;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC9C,QAAOC,IAAI;IACP,KAAK,MAAM;MACP,OAAM,CAAC,GAAGF,KAAK,EAAEG,OAAO,CAAC;IAC7B,KAAK,QAAQ;MACT,OAAOH,KAAK,CAACI,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKH,OAAO,CAACG,EAAE,GAAGH,OAAO,GAAGE,GAAG,CAAC;IAClE,KAAK,QAAQ;MACT,OAAOL,KAAK,CAACO,MAAM,CAACF,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKH,OAAO,CAACG,EAAE,CAAC;IACrD;MACI,MAAM,IAAIE,KAAK,EAAE;EAAC;AAE9B;AAEA,SAASC,UAAUA,CAAA,EAAE;EACjB,MAAMC,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACzD,MAAMC,YAAY,GAAGH,aAAa,GAAGI,IAAI,CAACC,KAAK,CAACL,aAAa,CAAC,GAAG,EAAE;EAC/D,OAAOG,YAAY;AAE3B;AACA,eAAe,SAASG,cAAcA,CAACC,KAAK,EAAC;EAAAC,EAAA;EACzC,MAAK,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAACE,KAAK,EAAE,CAACyB,KAAK,EAAE,CAAC;EAC5D,MAAK,CAACC,cAAc,EAACC,iBAAiB,CAAE,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EAC1D,MAAK,CAAC8B,WAAW,EAAEC,cAAc,CAAE,GAAG/B,QAAQ,CAACE,KAAK,EAAE,CAAC;EACvD,MAAM,CAAC8B,WAAW,EAAEC,gBAAgB,CAAC,GAAGlC,UAAU,CAACM,kBAAkB,EAAE,EAAE,EAAEU,UAAU,CAAC;EACtF,oBACIX,OAAA,CAACH,aAAa,CAACiC,QAAQ;IAACC,KAAK,EAAE;MAC3BV,UAAU;MACVC,aAAa;MACbE,cAAc;MACdC,iBAAiB;MACjBC,WAAW;MACXC;IACA,CAAE;IAAAK,QAAA,EACDb,KAAK,CAACa;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACM;AAEjC;AAAChB,EAAA,CAjBuBF,cAAc;AAAAmB,EAAA,GAAdnB,cAAc;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}